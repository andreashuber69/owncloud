#!/bin/bash
# Based on https://doc.owncloud.org/server/10.0/admin_manual/maintenance/backup.html
# Creates a new folder containing all data necessary to restore a fresh installation of ownCloud to the state it had
# when this script was executed.
# Expects as the only argument a path to a folder in which a new folder containing the backup should be created.
set -o errexit
set -o nounset
set -o pipefail

if [ "$#" -ne 1 ] || [ ! -d "$1" ]; then
  echo "Error: The only argument must be an existing folder."
  exit 1
fi

backup_folder=$1/$(date +"%Y%m%d_%H%M%S")
mkdir $backup_folder
echo "Backing up files..."
sudo tar --create --file=$backup_folder/owncloud-files.tar.gz --use-compress-program=pigz --directory=/var/www/html/owncloud config data
echo "Verifying files..."
sudo tar --compare --file=$backup_folder/owncloud-files.tar.gz --directory=/var/www/html/owncloud
echo "Backing up database..."
mysqldump --single-transaction -u owncloud -p12345 owncloud > $backup_folder/owncloud-db-dump.sql
echo "Verifying database..."
# Of course, the following doesn't verify against the original, but it at least ensures that the DB can be
# recreated. mysqldbcompare would surely help here, but it appears that using that would require a specific
# Python version.
sudo mysql -u root -praspberry -e "create database owncloud_restore_test"
mysql -u owncloud -p12345 owncloud_restore_test < $backup_folder/owncloud-db-dump.sql
sudo mysql -u root -praspberry -e "drop database owncloud_restore_test"
echo "Backup completed successfully."
